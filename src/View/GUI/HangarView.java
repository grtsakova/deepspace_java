/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import deepspace.HangarToUI;
import deepspace.ShieldToUI;
import deepspace.WeaponToUI;
import java.awt.Component;
import java.util.ArrayList;

/**
 *
 * @author gerga
 */
public class HangarView extends javax.swing.JPanel {

    /**
     * Creates new form HangarView
     */
    public HangarView() {
        initComponents();
    }
    
    void setHangar(HangarToUI h){
        
        HangarWeaponsPanel.removeAll();
        ArrayList<WeaponToUI> weaponsHangar = h.getWeapons();
        WeaponView weaponHangarView;
        for (WeaponToUI wh : weaponsHangar) {
            weaponHangarView = new WeaponView();
            weaponHangarView.setWeapon(wh);
            HangarWeaponsPanel.add(weaponHangarView);
        }

        HangarShieldsPanel.removeAll();
        ArrayList<ShieldToUI> shieldsHangar = h.getShieldBoosters();
        ShieldBoosterView shieldsHangarView;
        for (ShieldToUI shh : shieldsHangar){
           shieldsHangarView = new ShieldBoosterView();
           shieldsHangarView.SetShieldBooster(shh);
           HangarShieldsPanel.add(shieldsHangarView);
        }


        repaint();
        revalidate();
       
    }
    
    ArrayList<Integer> getSelectedWeaponsHagar(){
        ArrayList<Integer> selectedWeaponsHangar = new ArrayList<>();
        int i = 0;
        for (Component c : HangarWeaponsPanel.getComponents()){
                if(((WeaponView) c).isSelected()){
                selectedWeaponsHangar.add(i);
                }
                i++;  
        }
        return selectedWeaponsHangar;
    }
    
    //shields in hangar
    ArrayList<Integer> getSelectedShieldsHagar(){
        ArrayList<Integer> selectedShieldsHangar = new ArrayList<>();
        int i = 0;
        for (Component c : HangarShieldsPanel.getComponents()){
                if(((ShieldBoosterView) c).isSelected()){
                selectedShieldsHangar.add(i);
                }
                i++;
        }
        return selectedShieldsHangar;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HangarWeaponsPanel = new javax.swing.JPanel();
        HangarShieldsPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HangarWeaponsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HangarShieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HangarWeaponsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
            .addComponent(HangarShieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HangarShieldsPanel;
    private javax.swing.JPanel HangarWeaponsPanel;
    // End of variables declaration//GEN-END:variables
}
