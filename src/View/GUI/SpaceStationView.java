/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import controller.Controller;
import deepspace.GameState;
import deepspace.HangarToUI;
import deepspace.ShieldToUI;
import deepspace.SpaceStationToUI;
import deepspace.WeaponToUI;
import java.awt.Component;
import java.util.ArrayList;

/**
 *
 * @author gerga
 */
public class SpaceStationView extends javax.swing.JPanel {

    /**
     * Creates new form SpaceStationView
     */
    
    private DamageView pendingDamage;
    private HangarView hangarView;
    
    
    public SpaceStationView() {
        initComponents();
        pendingDamage = new DamageView();
        hangarView = new HangarView();
    }
    
    void setSpaceStation(SpaceStationToUI s){
        name.setText(s.getName());
        power.setText(Float.toString(s.getAmmoPower()));
        protection.setText(Float.toString(s.getShieldPower()));
        fuel.setText(Float.toString(s.getFuelUnits()));
        medals.setText(Integer.toString(s.getnMedals()));
        
        if(s.getPendingDamage()!=null){
            pendingDamage.setDamage(s.getPendingDamage());
            panelPendingDamage.add(pendingDamage);
            panelPendingDamage.setVisible(true);
        } else {
            panelPendingDamage.setVisible(false);
        }
        
        panelEquippedWeapons.removeAll();
        ArrayList<WeaponToUI> weapons = s.getWeapons();
        WeaponView weaponView;
        for (WeaponToUI w : weapons) {
            weaponView = new WeaponView();
            weaponView.setWeapon(w);
            panelEquippedWeapons.add(weaponView);
        }
        
        panelEquippedShields.removeAll();
        ArrayList<ShieldToUI> shields = s.getShieldBoosters();
        ShieldBoosterView shieldsView;
        for (ShieldToUI sh : shields){
           shieldsView = new ShieldBoosterView();
           shieldsView.SetShieldBooster(sh);
           panelEquippedShields.add(shieldsView);
        }
       
        HangarToUI h = s.getHangar();
        if(h != null){
            hangarView.setHangar(h);
            panelHangar.add(hangarView);
        } else {
            panelHangar.removeAll();
        }
        
        //buttons
        buttonMontar.setEnabled(Controller.getInstance().getState()==GameState.INIT || Controller.getInstance().getState()==GameState.AFTERCOMBAT);
        buttonDescartar.setEnabled(Controller.getInstance().getState()==GameState.AFTERCOMBAT);
        buttonDescartarHangar.setEnabled(Controller.getInstance().getState()==GameState.AFTERCOMBAT);

       repaint();
       revalidate();
    }
    
    //mounted weapons
    ArrayList<Integer> getSelectedWeapons(){
        ArrayList<Integer> selectedWeapons = new ArrayList<>();
        int i = 0;
        for (Component c : panelEquippedWeapons.getComponents()){
            if(((WeaponView) c).isSelected()){
            selectedWeapons.add(i);
            }
            i++;
        }
        return selectedWeapons;
    }
    
    //mounted shields
    ArrayList<Integer> getSelectedShields(){
        ArrayList<Integer> selectedShields = new ArrayList<>();
        int i = 0;
        for (Component c : panelEquippedShields.getComponents()){
            if(((ShieldBoosterView) c).isSelected()){
            selectedShields.add(i);
            }
            i++;
        }
        return selectedShields;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        power = new javax.swing.JLabel();
        protection = new javax.swing.JLabel();
        fuel = new javax.swing.JLabel();
        medals = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelPendingDamage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelEquippedWeapons = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelEquippedShields = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelHangar = new javax.swing.JPanel();
        buttonMontar = new javax.swing.JButton();
        buttonDescartar = new javax.swing.JButton();
        buttonDescartarHangar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Estaci√≥n  ");

        name.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        name.setText("jLabel2");

        jLabel2.setText("Potencia de ataque:");

        jLabel3.setText("Potencia de defensa:");

        jLabel4.setText("Nivel de combustible:");

        jLabel5.setText("Medallas:");

        power.setText("jLabel6");

        protection.setText("jLabel6");

        fuel.setText("jLabel6");

        medals.setText("jLabel6");

        jScrollPane4.setBorder(null);

        panelPendingDamage.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Castigo Pendiente"));
        jScrollPane4.setViewportView(panelPendingDamage);

        jScrollPane1.setBorder(null);

        panelEquippedWeapons.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Potenciadores de fuego"));
        jScrollPane1.setViewportView(panelEquippedWeapons);

        jScrollPane2.setBorder(null);

        panelEquippedShields.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Potenciadores de Defensa"));
        jScrollPane2.setViewportView(panelEquippedShields);

        jScrollPane3.setBorder(null);

        panelHangar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hangar"));
        jScrollPane3.setViewportView(panelHangar);

        buttonMontar.setText("Montar");
        buttonMontar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buttonMontar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMontarActionPerformed(evt);
            }
        });

        buttonDescartar.setText("Descartar");
        buttonDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDescartarActionPerformed(evt);
            }
        });

        buttonDescartarHangar.setText("Descartar Hangar Completo");
        buttonDescartarHangar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDescartarHangarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(medals)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(fuel))
                            .addComponent(power)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(protection)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonMontar)
                .addGap(18, 18, 18)
                .addComponent(buttonDescartar)
                .addGap(18, 18, 18)
                .addComponent(buttonDescartarHangar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel3)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel4)
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(medals)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(power)
                                .addGap(7, 7, 7)
                                .addComponent(protection)
                                .addGap(7, 7, 7)
                                .addComponent(fuel)))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonMontar)
                    .addComponent(buttonDescartar)
                    .addComponent(buttonDescartarHangar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMontarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMontarActionPerformed
        Controller.getInstance().mount(hangarView.getSelectedWeaponsHagar(), hangarView.getSelectedShieldsHagar());
        MainView.getInstance().updateView();
    }//GEN-LAST:event_buttonMontarActionPerformed

    private void buttonDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDescartarActionPerformed
        Controller.getInstance().discard(Controller.WEAPON, getSelectedWeapons(), getSelectedShields());
        Controller.getInstance().discard(Controller.SHIELD, getSelectedWeapons(), getSelectedShields());
        Controller.getInstance().discard(Controller.HANGAR, hangarView.getSelectedWeaponsHagar(), hangarView.getSelectedShieldsHagar());
        MainView.getInstance().updateView();
    }//GEN-LAST:event_buttonDescartarActionPerformed

    private void buttonDescartarHangarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDescartarHangarActionPerformed
        Controller.getInstance().discardHangar();
        MainView.getInstance().updateView();
    }//GEN-LAST:event_buttonDescartarHangarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDescartar;
    private javax.swing.JButton buttonDescartarHangar;
    private javax.swing.JButton buttonMontar;
    private javax.swing.JLabel fuel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel medals;
    private javax.swing.JLabel name;
    private javax.swing.JPanel panelEquippedShields;
    private javax.swing.JPanel panelEquippedWeapons;
    private javax.swing.JPanel panelHangar;
    private javax.swing.JPanel panelPendingDamage;
    private javax.swing.JLabel power;
    private javax.swing.JLabel protection;
    // End of variables declaration//GEN-END:variables
}
